{
  "component": {
    "scope": "javascript, typescript, javascriptreact",
    "prefix": "fn",
    "body": [
      "const ${TM_FILENAME_BASE} = () => {\n\treturn <div>Start</div>\n} \nexport default ${TM_FILENAME_BASE}"
    ]
  },
  "arrow function": {
    "scope": "javascript, typescript, javascriptreact",
    "prefix": "arf",
    "body": ["const ${1:hello} = () => {\n\treturn\n}"]
  },
  "arr": {
    "scope": "javascript, typescript, javascriptreact",
    "prefix": "arr",
    "body": ["const ${1:arr} = []"]
  },
  "const": {
    "scope": "javascript, typescript, javascriptreact",
    "prefix": "co",
    "body": ["const ${1:} = "]
  },
  "for loop": {
    "scope": "javascript, typescript, javascriptreact",
    "prefix": "fl",
    "body": ["for (let i = 0; i < 10; i++) {\n\t\n}"]
  },
  "for each": {
    "scope": "javascript, typescript, javascriptreact",
    "prefix": "fe",
    "body": ["${1:ar}.forEach((el) => {\n\t\n})"]
  },
  "console": {
    "scope": "javascript, typescript, javascriptreact",
    "prefix": "cl",
    "body": ["console.log(${1:})"]
  },
  "import usestate": {
    "scope": "javascript,typescript, javascriptreact",
    "prefix": "imeff",
    "body": ["import useState  from 'react'"]
  },
  "usestate": {
    "scope": "javascript, typescript, javascriptreact",
    "prefix": "use",
    "body": ["const [count, setCount] = useState(0);"]
  },
  "import useeffect": {
    "scope": "javascript,typescript, javascriptreact",
    "prefix": "imeff",
    "body": ["import useEffect  from 'react'"]
  },
  "useeffect": {
    "scope": "javascript,typescript, javascriptreact",
    "prefix": "eff",
    "body": ["useEffect((el) => {\n\t${1:}\n});"]
  },
  "export default": {
    "scope": "javascript,typescript, javascriptreact",
    "prefix": "ed",
    "body": ["export default"]
  },
  "import axios": {
    "scope": "javascript,typescript, javascriptreact",
    "prefix": "imax",
    "body": ["import axios from 'axios'"]
  },
  "axi": {
    "scope": "javascript,typescript, javascriptreact",
    "description": "creates API request using axios, change `request` and `setFunction` with your own variable name",
    "prefix": "axi",
    "body": [
      "useEffect(() => {"
      "  axios"
      "    .get(request.requestName)"
      "    .then((response) => setFunction(response.data.results))"
      "}, [])"
    ]
  },
  "fetch": {
    "scope": "javascript,typescript, javascriptreact",
    "description": "creates API request using fetch, change `setFunction` with your own variable name",
    "prefix": "fet",
    "body": [
      "useEffect(() => {"
      "  fetch('Place your URL!)"
      "    .then(response => response.json())"
      "    .then(data => setFunction(data.message))"
      "}, [])"
    ]
  },
}
